{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/map/src/components/LocationGrid.js\",\n  _s = $RefreshSig$();\n// LocationGrid.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./style/LocationGrid.css\";\nimport Map from \"./Maps\";\nimport LocationTable from \"./LocationTable\";\nimport { postRequest, putRequest, getRequest } from \"../helper/ApiRequests\";\nimport ModalForm from \"./ModalForm\";\nimport config from \"../config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationGrid = () => {\n  _s();\n  // Initialize state variables using useState\n  const [locations, setLocations] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [editLocation, setEditLocation] = useState(null);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [focusedCoordinates, setFocusedCoordinates] = useState(null);\n  const url = config.apiUrl;\n\n  // Function to update the locations state\n  const updateLocations = data => {\n    setLocations(data);\n  };\n  // Fetch data when the component mounts\n  useEffect(() => {\n    (async () => {\n      const data = await getRequest(url);\n      setLocations(data);\n    })();\n  }, []);\n  // Fetch data every 15 seconds\n  useEffect(() => {\n    fetchData();\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 15000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  // Fetch data from the API\n  const fetchData = async () => {\n    const data = await getRequest(url);\n    updateLocations(data);\n  };\n\n  // Handle adding a new location\n  const handleAddLocation = async newLocation => {\n    await postRequest(url, newLocation);\n    setLocations([...locations, newLocation]);\n    setIsFormOpen(false);\n    getRequest(url);\n  };\n\n  // Function to open the edit form\n  const openEditForm = location => {\n    setEditLocation(location);\n    setIsEditFormOpen(true);\n  };\n\n  // Handle editing a location\n  const handleEditLocation = async newLocation => {\n    console.log(locations);\n    const index = locations.findIndex((element, index) => {\n      if (element.id === newLocation.id) {\n        return true;\n      }\n    });\n    locations[index] = newLocation;\n    setLocations(locations);\n    await putRequest(`http://192.168.1.10:7147/api/Location/${newLocation.id}`, newLocation);\n    setIsEditFormOpen(false);\n    getRequest(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        focusedCoordinates: focusedCoordinates,\n        locaions: locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(LocationTable, {\n        locations: locations,\n        setFocusedCoordinates: setFocusedCoordinates,\n        setIsFormOpen: setIsFormOpen,\n        setIsEditFormOpen: openEditForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isFormOpen && /*#__PURE__*/_jsxDEV(ModalForm, {\n      onAddLocation: handleAddLocation,\n      setIsFormOpen: setIsFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), isEditFormOpen && /*#__PURE__*/_jsxDEV(ModalForm, {\n      locationData: editLocation,\n      onAddLocation: handleEditLocation,\n      setIsFormOpen: setIsEditFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationGrid, \"XmzdyJujAF5znx2CCaSPHPNhtrE=\");\n_c = LocationGrid;\nexport default LocationGrid;\nvar _c;\n$RefreshReg$(_c, \"LocationGrid\");","map":{"version":3,"names":["React","useState","useEffect","Map","LocationTable","postRequest","putRequest","getRequest","ModalForm","config","jsxDEV","_jsxDEV","LocationGrid","_s","locations","setLocations","isFormOpen","setIsFormOpen","editLocation","setEditLocation","isEditFormOpen","setIsEditFormOpen","focusedCoordinates","setFocusedCoordinates","url","apiUrl","updateLocations","data","fetchData","intervalId","setInterval","clearInterval","handleAddLocation","newLocation","openEditForm","location","handleEditLocation","console","log","index","findIndex","element","id","className","children","locaions","fileName","_jsxFileName","lineNumber","columnNumber","onAddLocation","locationData","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/map/src/components/LocationGrid.js"],"sourcesContent":["// LocationGrid.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./style/LocationGrid.css\";\nimport Map from \"./Maps\";\nimport LocationTable from \"./LocationTable\";\nimport { postRequest, putRequest, getRequest } from \"../helper/ApiRequests\";\nimport ModalForm from \"./ModalForm\";\nimport config from \"../config/config\";\n\nconst LocationGrid = () => {\n  // Initialize state variables using useState\n  const [locations, setLocations] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [editLocation, setEditLocation] = useState(null);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [focusedCoordinates, setFocusedCoordinates] = useState(null);\n  const url = config.apiUrl;\n\n  // Function to update the locations state\n  const updateLocations = (data) => {\n    setLocations(data);\n  };\n  // Fetch data when the component mounts\n  useEffect(() => {\n    (async () => {\n      const data = await getRequest(url);\n      setLocations(data);\n    })();\n  }, []);\n  // Fetch data every 15 seconds\n  useEffect(() => {\n    fetchData();\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 15000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  // Fetch data from the API\n  const fetchData = async () => {\n    const data = await getRequest(url);\n    updateLocations(data);\n  };\n\n  // Handle adding a new location\n  const handleAddLocation = async (newLocation) => {\n    await postRequest(url, newLocation);\n    setLocations([...locations, newLocation]);\n    setIsFormOpen(false);\n    getRequest(url);\n  };\n\n  // Function to open the edit form\n  const openEditForm = (location) => {\n    setEditLocation(location);\n    setIsEditFormOpen(true);\n  };\n\n  // Handle editing a location\n  const handleEditLocation = async (newLocation) => {\n    console.log(locations);\n\n    const index = locations.findIndex((element, index) => {\n      if (element.id === newLocation.id) {\n        return true;\n      }\n    });\n    locations[index] = newLocation;\n    setLocations(locations);\n    await putRequest(\n      `http://192.168.1.10:7147/api/Location/${newLocation.id}`,\n      newLocation\n    );\n    setIsEditFormOpen(false);\n    getRequest(url);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        <Map focusedCoordinates={focusedCoordinates} locaions={locations} />\n      </div>\n      <div className=\"right\">\n        <LocationTable\n          locations={locations}\n          setFocusedCoordinates={setFocusedCoordinates}\n          setIsFormOpen={setIsFormOpen}\n          setIsEditFormOpen={openEditForm}\n        />\n      </div>\n      {isFormOpen && (\n        <ModalForm\n          onAddLocation={handleAddLocation}\n          setIsFormOpen={setIsFormOpen}\n        />\n      )}\n      {isEditFormOpen && (\n        <ModalForm\n          locationData={editLocation}\n          onAddLocation={handleEditLocation}\n          setIsFormOpen={setIsEditFormOpen}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LocationGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}