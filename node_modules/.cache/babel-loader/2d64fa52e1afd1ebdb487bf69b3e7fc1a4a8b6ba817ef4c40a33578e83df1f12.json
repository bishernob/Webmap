{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/map/src/LocationGrid.js\",\n  _s = $RefreshSig$();\n// LocationGrid.js\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./LocationGrid.css\";\nimport Map from \"./Maps\";\nimport LocationTable from \"./LocationTable\";\nimport { postRequest, putRequest, getRequest } from \"./helper/ApiRequests\";\nimport ModalForm from \"./ModalForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationGrid = () => {\n  _s();\n  // Sample data for multiple rows\n\n  // const [rows, setRows] = useState([]);\n\n  const [locations, setLocations] = useState([]);\n  const url = \"http://192.168.1.10:7147/api/Location\";\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [editLocation, setEditLocation] = useState(null);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  // const getData = async (url) => {\n  //   await getRequest(url);\n  // };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getRequest(url);\n      console.log(data);\n      setLocations(data);\n    })();\n  }, []);\n\n  // const toggleForm = () => {\n  //   setIsFormOpen(!isFormOpen);\n  // };\n  const handleAddLocation = async newLocation => {\n    await postRequest(url, newLocation);\n    setLocations([...locations, newLocation]);\n    setIsFormOpen(false);\n    getRequest(url); // Close the form after adding a location\n  };\n\n  const handleEditLocation = location => {\n    setEditLocation(location);\n    setIsEditFormOpen(true);\n  };\n\n  // const [formData, setFormData] = useState({\n  //   name: \"\",\n  //   lat: \"\",\n  //   lng: \"\",\n  // });\n\n  // const [formErrors, setFormErrors] = useState({\n  //   name: \"\",\n  //   lat: \"\",\n  //   lng: \"\",\n  // });\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   if (!formData.name || !formData.lat || !formData.lng) {\n  //     setFormErrors({ ...formErrors, name: \"Name is required\" });\n  //     return;\n  //   }\n  //   setFormData({ ...formData, [name]: value });\n  // };\n\n  // const handleEditLocation = (index) => {\n  //   // Add your logic to open a modal or form to edit location details\n  //   // Then, update the location in the locations array\n  //   const editedLocation = { ...locations[index], name: \"Edited Location\" };\n  //   const updatedLocations = [...locations];\n  //   updatedLocations[index] = editedLocation;\n  //   setLocations(updatedLocations);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        sampleData: locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(LocationTable, {\n        locations: locations,\n        setIsFormOpen: setIsFormOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isFormOpen && /*#__PURE__*/_jsxDEV(ModalForm, {\n      onAddLocation: handleAddLocation,\n      setIsFormOpen: setIsFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), isEditFormOpen && /*#__PURE__*/_jsxDEV(ModalForm, {\n      location: editLocation,\n      onAddLocation: handleEditLocation // You may want to use a different function to handle edits\n      ,\n      setIsFormOpen: setIsEditFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationGrid, \"MRa8dVt2iJF27nGd08TIRmEBvbk=\");\n_c = LocationGrid;\nexport default LocationGrid;\n\n//   useEffect(() => {\n//     console.log(\"before fetch\");\n//     fetch(\"http://localhost:7147/api/Location\", {\n//       method: \"GET\", // or 'POST', 'PUT', etc.\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         // Add any other headers if needed\n//       },\n//     })\n//       .then((response) => {\n//         console.log(\"after fetch\", response);\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => console.log(data))\n//       .catch((error) => console.error(\"Fetch error:\", error));\n//   }, []);\n\n//   const [locations, setLocations] = useState([]);\n\n// {locations.map((location) => (\n//   <tr key={location.id}>\n//     <td>{location.id}</td>\n//     <td>{location.name}</td>\n//     <td>{location.notes}</td>\n//     <td>{location.lat}</td>\n//     <td>{location.lng}</td>\n//   </tr>\n// ))}\nvar _c;\n$RefreshReg$(_c, \"LocationGrid\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Map","LocationTable","postRequest","putRequest","getRequest","ModalForm","jsxDEV","_jsxDEV","LocationGrid","_s","locations","setLocations","url","isFormOpen","setIsFormOpen","editLocation","setEditLocation","isEditFormOpen","setIsEditFormOpen","data","console","log","handleAddLocation","newLocation","handleEditLocation","location","className","children","sampleData","fileName","_jsxFileName","lineNumber","columnNumber","onAddLocation","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/map/src/LocationGrid.js"],"sourcesContent":["// LocationGrid.js\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./LocationGrid.css\";\nimport Map from \"./Maps\";\nimport LocationTable from \"./LocationTable\";\nimport { postRequest, putRequest, getRequest } from \"./helper/ApiRequests\";\n\nimport ModalForm from \"./ModalForm\";\n\nconst LocationGrid = () => {\n  // Sample data for multiple rows\n\n  // const [rows, setRows] = useState([]);\n\n  const [locations, setLocations] = useState([]);\n  const url = \"http://192.168.1.10:7147/api/Location\";\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [editLocation, setEditLocation] = useState(null);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  // const getData = async (url) => {\n  //   await getRequest(url);\n  // };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getRequest(url);\n      console.log(data);\n      setLocations(data);\n    })();\n  }, []);\n\n  // const toggleForm = () => {\n  //   setIsFormOpen(!isFormOpen);\n  // };\n  const handleAddLocation = async (newLocation) => {\n    await postRequest(url, newLocation);\n    setLocations([...locations, newLocation]);\n    setIsFormOpen(false);\n    getRequest(url); // Close the form after adding a location\n  };\n\n  const handleEditLocation = (location) => {\n    setEditLocation(location);\n    setIsEditFormOpen(true);\n  };\n\n  // const [formData, setFormData] = useState({\n  //   name: \"\",\n  //   lat: \"\",\n  //   lng: \"\",\n  // });\n\n  // const [formErrors, setFormErrors] = useState({\n  //   name: \"\",\n  //   lat: \"\",\n  //   lng: \"\",\n  // });\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   if (!formData.name || !formData.lat || !formData.lng) {\n  //     setFormErrors({ ...formErrors, name: \"Name is required\" });\n  //     return;\n  //   }\n  //   setFormData({ ...formData, [name]: value });\n  // };\n\n  // const handleEditLocation = (index) => {\n  //   // Add your logic to open a modal or form to edit location details\n  //   // Then, update the location in the locations array\n  //   const editedLocation = { ...locations[index], name: \"Edited Location\" };\n  //   const updatedLocations = [...locations];\n  //   updatedLocations[index] = editedLocation;\n  //   setLocations(updatedLocations);\n  // };\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        <Map sampleData={locations} />\n      </div>\n      <div className=\"right\">\n        <LocationTable locations={locations} setIsFormOpen={setIsFormOpen} />\n      </div>\n      {isFormOpen && (\n        <ModalForm\n          onAddLocation={handleAddLocation}\n          setIsFormOpen={setIsFormOpen}\n        />\n      )}\n      {isEditFormOpen && (\n        <ModalForm\n          location={editLocation}\n          onAddLocation={handleEditLocation} // You may want to use a different function to handle edits\n          setIsFormOpen={setIsEditFormOpen}\n        />\n      )}\n      {/* <input\n        type=\"text\"\n        name=\"name\"\n        value={formData.name}\n        onChange={handleInputChange}\n      />\n      {formErrors.name && <span className=\"error\">{formErrors.name}</span>} */}\n    </div>\n  );\n};\n\nexport default LocationGrid;\n\n//   useEffect(() => {\n//     console.log(\"before fetch\");\n//     fetch(\"http://localhost:7147/api/Location\", {\n//       method: \"GET\", // or 'POST', 'PUT', etc.\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         // Add any other headers if needed\n//       },\n//     })\n//       .then((response) => {\n//         console.log(\"after fetch\", response);\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => console.log(data))\n//       .catch((error) => console.error(\"Fetch error:\", error));\n//   }, []);\n\n//   const [locations, setLocations] = useState([]);\n\n// {locations.map((location) => (\n//   <tr key={location.id}>\n//     <td>{location.id}</td>\n//     <td>{location.name}</td>\n//     <td>{location.notes}</td>\n//     <td>{location.lat}</td>\n//     <td>{location.lng}</td>\n//   </tr>\n// ))}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAO,oBAAoB;AAC3B,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,EAAEC,UAAU,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;;EAEA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMe,GAAG,GAAG,uCAAuC;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3D;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMqB,IAAI,GAAG,MAAMf,UAAU,CAACQ,GAAG,CAAC;MAClCQ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,YAAY,CAACQ,IAAI,CAAC;IACpB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA,MAAMG,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC/C,MAAMrB,WAAW,CAACU,GAAG,EAAEW,WAAW,CAAC;IACnCZ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEa,WAAW,CAAC,CAAC;IACzCT,aAAa,CAAC,KAAK,CAAC;IACpBV,UAAU,CAACQ,GAAG,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED,MAAMY,kBAAkB,GAAIC,QAAQ,IAAK;IACvCT,eAAe,CAACS,QAAQ,CAAC;IACzBP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEX,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBpB,OAAA,CAACP,GAAG;QAAC4B,UAAU,EAAElB;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACNzB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBpB,OAAA,CAACN,aAAa;QAACS,SAAS,EAAEA,SAAU;QAACI,aAAa,EAAEA;MAAc;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,EACLnB,UAAU,iBACTN,OAAA,CAACF,SAAS;MACR4B,aAAa,EAAEX,iBAAkB;MACjCR,aAAa,EAAEA;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,EACAf,cAAc,iBACbV,OAAA,CAACF,SAAS;MACRoB,QAAQ,EAAEV,YAAa;MACvBkB,aAAa,EAAET,kBAAmB,CAAC;MAAA;MACnCV,aAAa,EAAEI;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjGID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAmGlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}